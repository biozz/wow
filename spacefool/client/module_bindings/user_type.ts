// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.2.0 (commit fb41e50eb73573b70eea532aeb6158eaac06fae0).

/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
import {
  AlgebraicType,
  AlgebraicValue,
  BinaryReader,
  BinaryWriter,
  ConnectionId,
  DbConnectionBuilder,
  DbConnectionImpl,
  Identity,
  ProductType,
  ProductTypeElement,
  SubscriptionBuilderImpl,
  SumType,
  SumTypeVariant,
  TableCache,
  TimeDuration,
  Timestamp,
  deepEqual,
  type CallReducerFlags,
  type DbContext,
  type ErrorContextInterface,
  type Event,
  type EventContextInterface,
  type ReducerEventContextInterface,
  type SubscriptionEventContextInterface,
} from "@clockworklabs/spacetimedb-sdk";
import { PlayerStatus as __PlayerStatus } from "./player_status_type";

export type User = {
  identity: Identity,
  name: string | undefined,
  online: boolean,
  currentLobbyId: bigint | undefined,
  lobbyJoinedAt: Timestamp | undefined,
  currentGameId: bigint | undefined,
  gamePosition: number | undefined,
  totalPoints: number | undefined,
  playerStatus: __PlayerStatus | undefined,
};

/**
 * A namespace for generated helper functions.
 */
export namespace User {
  /**
  * A function which returns this type represented as an AlgebraicType.
  * This function is derived from the AlgebraicType used to generate this type.
  */
  export function getTypeScriptAlgebraicType(): AlgebraicType {
    return AlgebraicType.createProductType([
      new ProductTypeElement("identity", AlgebraicType.createIdentityType()),
      new ProductTypeElement("name", AlgebraicType.createOptionType(AlgebraicType.createStringType())),
      new ProductTypeElement("online", AlgebraicType.createBoolType()),
      new ProductTypeElement("currentLobbyId", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("lobbyJoinedAt", AlgebraicType.createOptionType(AlgebraicType.createTimestampType())),
      new ProductTypeElement("currentGameId", AlgebraicType.createOptionType(AlgebraicType.createU64Type())),
      new ProductTypeElement("gamePosition", AlgebraicType.createOptionType(AlgebraicType.createU8Type())),
      new ProductTypeElement("totalPoints", AlgebraicType.createOptionType(AlgebraicType.createU8Type())),
      new ProductTypeElement("playerStatus", AlgebraicType.createOptionType(__PlayerStatus.getTypeScriptAlgebraicType())),
    ]);
  }

  export function serialize(writer: BinaryWriter, value: User): void {
    User.getTypeScriptAlgebraicType().serialize(writer, value);
  }

  export function deserialize(reader: BinaryReader): User {
    return User.getTypeScriptAlgebraicType().deserialize(reader);
  }

}


